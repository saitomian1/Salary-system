<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<record_update table="sys_ui_action">
  <sys_ui_action action="INSERT_OR_UPDATE">
    <action_name>sysverb_update</action_name>
    <active>false</active>
    <client>true</client>
    <client_script_v2/>
    <comments/>
    <condition/>
    <form_action>true</form_action>
    <form_button>true</form_button>
    <form_button_v2>false</form_button_v2>
    <form_context_menu>false</form_context_menu>
    <form_link>false</form_link>
    <form_menu_button_v2>false</form_menu_button_v2>
    <form_style>primary</form_style>
    <hint/>
    <isolate_script>false</isolate_script>
    <list_action>false</list_action>
    <list_banner_button>false</list_banner_button>
    <list_button>false</list_button>
    <list_choice>false</list_choice>
    <list_context_menu>false</list_context_menu>
    <list_link>false</list_link>
    <list_save_with_form_button>false</list_save_with_form_button>
    <list_style/>
    <messages/>
    <name>薪资调整</name>
    <onclick>fun()</onclick>
    <order>100</order>
    <script>const fun = async () =&gt; {
    const response = async (res, ans) =&gt; {
        await res.next();
        const prevSalary = res.getValue('salary');
        const currentSalary = g_form.getValue("salary");
        
        const prevSocial = res.getValue('social_security');
        const currentSocial = g_form.getValue("social_security");
        
        const prevHousing = res.getValue('housing_provident_fund');
        const currentHousing = g_form.getValue("housing_provident_fund");
        
        const prevMeal = res.getValue('meal_allowance');
        const currentMeal = g_form.getValue("meal_allowance");
        
        const prevPhone = res.getValue('phone_allowance');
        const currentPhone = g_form.getValue("phone_allowance");
        
        const prevCompute = res.getValue('compute_allowance');
        const currentCompute = g_form.getValue("compute_allowance");
        
        const prevOther = res.getValue('other_allowance');
        const currentOther = g_form.getValue("other_allowance");

        const employee = g_form.getValue("employee");

        var ga = new GlideAjax("AdjustmentRecord");
        ga.addParam("sysparm_name", "creatAdjustmentRecord");
        ga.addParam("currentSalary", currentSalary);
        ga.addParam("currentSocial", currentSocial);
        ga.addParam("currentHousing", currentHousing);
        ga.addParam("currentMeal", currentMeal);
        ga.addParam("currentPhone", currentPhone);
        ga.addParam("currentCompute", currentCompute);
        ga.addParam("currentOther", currentOther);
        ga.addParam("prevSalary", prevSalary);
        ga.addParam("prevSocial", prevSocial);
        ga.addParam("prevHousing", prevHousing);
        ga.addParam("prevMeal", prevMeal);
        ga.addParam("prevPhone", prevPhone);
        ga.addParam("prevCompute", prevCompute);
        ga.addParam("prevOther", prevOther);
        ga.addParam("employee", employee);

        ga.getJson((r) =&gt; console.log(r));
        
        // var gr = new GlideRecord('x_yunji_jet_04_adjustment_record');
        // // current
        // gr.setValue('salary', currentSalary);
        // gr.setValue('social_security', currentSocial);
        // gr.setValue('housing_provident_fund', currentHousing);
        // gr.setValue('meal_allowance', currentMeal);
        // gr.setValue('phone_allowance', currentPhone);
        // gr.setValue('compute_allowance', currentCompute);
        // gr.setValue('other_allowance', currentOther);

        // // prev
        // gr.setValue('before_salary', prevSalary);
        // gr.setValue('before_social_security', prevSocial);
        // gr.setValue('before_housing_provident_fund', prevHousing);
        // gr.setValue('before_meal_allowance', prevMeal);
        // gr.setValue('before_phone_allowance', prevPhone);
        // gr.setValue('before_compute_allowance', prevCompute);
        // gr.setValue('before_other_allowance', prevOther);

        // // other
        // gr.setValue('employee', employee);

        // await gr.insert();

        current.update();

    }

    const sourceSalaryRecord = new GlideRecord('x_yunji_jet_04_base_salary');
    sourceSalaryRecord.addQuery('sys_id', '=', current.sys_id);
    await sourceSalaryRecord.query(response);
    
    
  }</script>
    <show_insert>true</show_insert>
    <show_multiple_update>false</show_multiple_update>
    <show_query>false</show_query>
    <show_update>true</show_update>
    <sys_class_name>sys_ui_action</sys_class_name>
    <sys_created_by>04admin</sys_created_by>
    <sys_created_on>2022-05-10 18:21:52</sys_created_on>
    <sys_domain>global</sys_domain>
    <sys_domain_path>/</sys_domain_path>
    <sys_effective/>
    <sys_id>56c972458beb4eb8b3882f2c714da517</sys_id>
    <sys_mod_count>1</sys_mod_count>
    <sys_name/>
    <sys_overrides>9eb4298fb710430b8e83ada9e3b85847</sys_overrides>
    <sys_package/>
    <sys_policy/>
    <sys_scope>0a73f96002524301a75a553e883ef21b</sys_scope>
    <sys_update_name/>
    <sys_updated_by>04admin</sys_updated_by>
    <sys_updated_on>2022-05-10 19:41:42</sys_updated_on>
    <table>x_yunji_jet_04_base_salary</table>
  </sys_ui_action>
</record_update>
