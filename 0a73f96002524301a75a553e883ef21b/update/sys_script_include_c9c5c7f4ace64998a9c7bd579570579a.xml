<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<record_update table="sys_script_include">
  <sys_script_include action="INSERT_OR_UPDATE">
    <access/>
    <active>true</active>
    <api_name>BonusDeductionCalculation</api_name>
    <caller_access/>
    <client_callable>false</client_callable>
    <description>薪资系统_奖金/补贴/扣费计算</description>
    <name>BonusDeductionCalculation</name>
    <script>var BonusDeductionCalculation = Class.create();
BonusDeductionCalculation.prototype = {
  initialize: function () {
  },

  calculate: function (sys_id) {
    // 公司月度工资单
    var summary = new GlideRecord('x_yunji_jet_04_monthly_payroll_summary');
    summary.addQuery('sys_id', sys_id);
    summary.query();
    // 公司月份清单
    var monthly_list = 0;
    if (summary.next()) {
      monthly_list = summary.getValue('monthly_list');
    }

    // 个人月工资表
    var payroll = new GlideRecord('x_yunji_jet_04_personal_monthly_payroll');
    payroll.addQuery('monthly_payroll_summary', sys_id);
    payroll.query();
    while (payroll.hasNext()) {
      payroll.next();
      var employee = payroll.getValue('employee');
      // 奖金/补贴
      var bonus = this.parseNum(payroll.getValue('bonus'));
      var bonus_desc = '';
      if (payroll.getValue('bonus_desc') != null) {
        bonus_desc = payroll.getValue('bonus_desc');
      }
      // 扣款
      var deduction = this.parseNum(payroll.getValue('deduction'));
      var deduction_desc = '';
      if (payroll.getValue('deduction_desc') != null) {
        deduction_desc = payroll.getValue('deduction_desc');
      }

      var br = new GlideRecord('x_yunji_jet_04_bonus_record');
      br.addQuery('monthly_list', monthly_list);
      br.addQuery('employee', employee);
      br.query();
      while (br.hasNext()) {
        br.next();
        if (br.getValue('bonus') != null) {
          var num = this.parseNum(br.getValue('bonus'));
          if (num &gt; 0) {
            bonus = bonus + this.parseNum(num);
            bonus_desc = bonus_desc + '[' + br.getValue('bonus_type') + '：' + num + ']';
          } else if (num &lt; 0) {
            deduction = deduction + Math.abs(num);
            deduction_desc = deduction_desc + '[' + br.getValue('bonus_type') + '：' + Math.abs(num) + ']';
          }
        }
      }
      // 应发工资：基本工资 + 奖金 - 扣费
      var total_salary = (this.parseNum(payroll.getValue('salary')) + this.parseNum(bonus) - this.parseNum(deduction)).toFixed(2);
      
      payroll.setValue('bonus', this.parseFixed(bonus));
      payroll.setValue('bonus_desc', bonus_desc);
      payroll.setValue('deduction', this.parseFixed(deduction));
      payroll.setValue('deduction_desc', deduction_desc);
      payroll.setValue('total_salary', total_salary);
      payroll.update();
    }
  },

  parseNum: function (num) {
    if (num == null || num == 0) {
      return 0;
    }
    return parseFloat(num);
  },

  parseFixed: function (num) {
    return num.toFixed(2);
  },

  type: 'BonusDeductionCalculation'
};</script>
    <sys_class_name>sys_script_include</sys_class_name>
    <sys_created_by>xuqingqing</sys_created_by>
    <sys_created_on>2022-04-27 22:51:23</sys_created_on>
    <sys_effective/>
    <sys_id>c9c5c7f4ace64998a9c7bd579570579a</sys_id>
    <sys_mod_count>1</sys_mod_count>
    <sys_name/>
    <sys_package/>
    <sys_policy/>
    <sys_scope>0a73f96002524301a75a553e883ef21b</sys_scope>
    <sys_update_name/>
    <sys_updated_by>xuqingqing</sys_updated_by>
    <sys_updated_on>2022-05-11 22:08:27</sys_updated_on>
  </sys_script_include>
</record_update>
