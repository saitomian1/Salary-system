<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<record_update table="sys_script_include">
  <sys_script_include action="INSERT_OR_UPDATE">
    <access/>
    <active>true</active>
    <api_name>SalaryReport</api_name>
    <caller_access/>
    <client_callable>false</client_callable>
    <description>薪资报表数据填充</description>
    <name>SalaryReport</name>
    <script>var SalaryReport = Class.create();
SalaryReport.prototype = {
    initialize: function () {
    },
    // monthlyPayrollId 公司月度工资单ID
    // monthlyPayrollName 公司月度工资单名称
    addSalaryTemplate: function (monthlyPayrollId, monthlyPayrollName) {

        var payTime = monthlyPayrollName.substring(0, 7);
        var company = monthlyPayrollName.substring(8, monthlyPayrollName.length - 1);
        if (company == '杭州云霁科技有限公司') {

            // 删除杭州重复月薪资模板
            var delHzSalaryTemplate = new GlideRecord('x_yunji_jet_04_hangzhou_salary_template');
            delHzSalaryTemplate.addQuery('pay_time', payTime);
            delHzSalaryTemplate.query()
            if(delHzSalaryTemplate.hasNext()) { 
                delHzSalaryTemplate.addQuery('pay_time', '=', payTime);
                delHzSalaryTemplate.deleteMultiple();
            }

            // 个人工资单
            var personalPayroll = new GlideRecord('x_yunji_jet_04_personal_monthly_payroll');
            // 根据公司月账单获取个人账单列表
            personalPayroll.addQuery('monthly_payroll_summary', monthlyPayrollId);
            personalPayroll.query();
            // 初始化序号
            var i = 1;
            while (personalPayroll.hasNext()) {
                personalPayroll.next();

                 // 杭州薪资模板
                var hzSalaryTemplate = new GlideRecord('x_yunji_jet_04_hangzhou_salary_template');
                // 员工信息
                var employee = new GlideRecord('x_yunji_jet_05_employee');
                var employeeId = personalPayroll.getValue('employee');
                employee.addQuery('sys_id', employeeId);
                employee.query();
                if (employee.hasNext()) {
                    employee.next();

                    // 序号
                    hzSalaryTemplate.setValue('serial_number', i++);
                    // 账号 account_number
                    var account_number = employee.getValue('bank_card');
                    hzSalaryTemplate.setValue('account_number', account_number);
                    // 户名
                    hzSalaryTemplate.setValue('account_name', personalPayroll.getDisplayValue('employee'));
                    // 金额
                    var money = personalPayroll.getValue('net_salary');
                    hzSalaryTemplate.setValue('money', money);
                    // 发放时间
                    hzSalaryTemplate.setValue('pay_time', payTime);
                    // 行名
                    var bank = employee.getValue('back_open');
                    // 是否跨行
                    if (bank.indexOf('建行') &lt; 0 &amp;&amp; bank.indexOf('建设银行') &lt; 0) {
                        // 跨行标识
                        hzSalaryTemplate.setValue('inter_bank_flag', '1');
                        // 银行名称
                        hzSalaryTemplate.setValue('bank', bank);
                    }

                    // 公司
                    hzSalaryTemplate.setValue(' company', '杭州云霁科技有限公司');

                    // 插入杭州薪资模板
                    hzSalaryTemplate.insert();
                }
            }
        } else if (company == '北京云霁网络科技有限公司') {

            // 删除北京重复月薪资模板
            var delBjSalaryTemplate = new GlideRecord('x_yunji_jet_04_beijing_salary_template');
            delBjSalaryTemplate.addQuery('pay_time', payTime);
            delBjSalaryTemplate.query()
            if(delBjSalaryTemplate.hasNext()) { 
                delBjSalaryTemplate.addQuery('pay_time', '=', payTime);
                delBjSalaryTemplate.deleteMultiple();
            }

            // 个人工资单
            var personalPayroll = new GlideRecord('x_yunji_jet_04_personal_monthly_payroll');
            // 根据公司月账单获取个人账单列表
            personalPayroll.addQuery('monthly_payroll_summary', monthlyPayrollId);
            personalPayroll.query();
            while (personalPayroll.hasNext()) {
                personalPayroll.next();

                // 北京薪资模板
                var bjSalaryTemplate = new GlideRecord('x_yunji_jet_04_beijing_salary_template');
                // 员工信息
                var employee = new GlideRecord('x_yunji_jet_05_employee');
                var employeeId = personalPayroll.getValue('employee');
                employee.addQuery('sys_id', employeeId);
                employee.query();
                if (employee.hasNext()) {
                    employee.next();

                    // 账号 account_number
                    var account_number = employee.getValue('bank_card');
                    bjSalaryTemplate.setValue('account_number', account_number);
                    // 户名
                    bjSalaryTemplate.setValue('account_name', personalPayroll.getDisplayValue('employee'));
                    // 金额
                    var money = personalPayroll.getValue('net_salary');
                    bjSalaryTemplate.setValue('money', money);
                    // 发放时间
                    bjSalaryTemplate.setValue('pay_time', payTime);
                    // 开户行
                    var bank = employee.getValue('back_open');
                    bjSalaryTemplate.setValue('bank', bank);

                    // 公司
                    bjSalaryTemplate.setValue('company', '北京云霁网络科技有限公司');

                    // 插入杭州薪资模板
                    bjSalaryTemplate.insert();
                }
            }
        } else if (company == '上海云之霁信息服务有限公司') {

            // 删除上海重复月薪资模板
            var delShSalaryTemplate = new GlideRecord('x_yunji_jet_04_shanghai_salary_template');
            delShSalaryTemplate.addQuery('pay_time', payTime);
            delShSalaryTemplate.query()
            if(delShSalaryTemplate.hasNext()) { 
                delShSalaryTemplate.addQuery('pay_time', '=', payTime);
                delShSalaryTemplate.deleteMultiple();
            }

            // 个人工资单
            var personalPayroll = new GlideRecord('x_yunji_jet_04_personal_monthly_payroll');
            // 根据公司月账单获取个人账单列表
            personalPayroll.addQuery('monthly_payroll_summary', monthlyPayrollId);
            personalPayroll.query();
            while (personalPayroll.hasNext()) {
                personalPayroll.next();

                // 上海薪资模板
                var shSalaryTemplate = new GlideRecord('x_yunji_jet_04_shanghai_salary_template');
                // 员工信息
                var employee = new GlideRecord('x_yunji_jet_05_employee');
                var employeeId = personalPayroll.getValue('employee');
                employee.addQuery('sys_id', employeeId);
                employee.query();
                if (employee.hasNext()) {
                    employee.next();

                    // 账号 account_number
                    var account_number = employee.getValue('bank_card');
                    shSalaryTemplate.setValue('account_number', account_number);
                    // 户名
                    shSalaryTemplate.setValue('account_name', personalPayroll.getDisplayValue('employee'));
                    // 金额
                    var money = personalPayroll.getValue('net_salary');
                    shSalaryTemplate.setValue('money', money);
                    // 发放时间
                    shSalaryTemplate.setValue('pay_time', payTime);

                    // 公司
                    shSalaryTemplate.setValue('company', '上海云之霁信息服务有限公司');

                    // 插入杭州薪资模板
                    shSalaryTemplate.insert();
                }
            }
        } else if (company == '深圳云霁科技有限公司') {

            // 删除深圳重复月薪资模板
            var delSzSalaryTemplate = new GlideRecord('x_yunji_jet_04_shenzhen_salary_template');
            delSzSalaryTemplate.addQuery('pay_time', payTime);
            delSzSalaryTemplate.query()
            if(delSzSalaryTemplate.hasNext()) { 
                delSzSalaryTemplate.addQuery('pay_time', '=', payTime);
                delSzSalaryTemplate.deleteMultiple();
            }

            // 个人工资单
            var personalPayroll = new GlideRecord('x_yunji_jet_04_personal_monthly_payroll');
            // 根据公司月账单获取个人账单列表
            personalPayroll.addQuery('monthly_payroll_summary', monthlyPayrollId);
            personalPayroll.query();
            var i = 1;
            while (personalPayroll.hasNext()) {
                personalPayroll.next();

                // 深圳薪资模板
                var bjSalaryTemplate = new GlideRecord('x_yunji_jet_04_shenzhen_salary_template');
                // 员工信息
                var employee = new GlideRecord('x_yunji_jet_05_employee');
                var employeeId = personalPayroll.getValue('employee');
                employee.addQuery('sys_id', employeeId);
                employee.query();
                if (employee.hasNext()) {
                    employee.next();

                    // 序号
                    bjSalaryTemplate.setValue('serial_number', i++);
                    // 账号 account_number
                    var account_number = employee.getValue('bank_card');
                    bjSalaryTemplate.setValue('account_number', account_number);
                    // 户名
                    bjSalaryTemplate.setValue('account_name', personalPayroll.getDisplayValue('employee'));
                    // 金额
                    var money = personalPayroll.getValue('net_salary');
                    bjSalaryTemplate.setValue('money', money);
                    // 发放时间
                    bjSalaryTemplate.setValue('pay_time', payTime);

                    // 公司
                    bjSalaryTemplate.setValue('company', '深圳云霁科技有限公司');

                    // 插入杭州薪资模板
                    bjSalaryTemplate.insert();
                }
            }
        }

    },

    type: 'SalaryReport'
};</script>
    <sys_class_name>sys_script_include</sys_class_name>
    <sys_created_by>04admin</sys_created_by>
    <sys_created_on>2022-05-10 17:41:37</sys_created_on>
    <sys_effective/>
    <sys_id>4e0fcffb8b164d0cae71dfa7110e707a</sys_id>
    <sys_mod_count>1</sys_mod_count>
    <sys_name/>
    <sys_package/>
    <sys_policy/>
    <sys_scope>0a73f96002524301a75a553e883ef21b</sys_scope>
    <sys_update_name/>
    <sys_updated_by>04admin</sys_updated_by>
    <sys_updated_on>2022-05-10 20:18:24</sys_updated_on>
  </sys_script_include>
</record_update>
